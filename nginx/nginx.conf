load_module modules/ndk_http_module.so;
load_module modules/ngx_http_lua_module.so;

user nginx;
worker_processes auto;

events {
    worker_connections 10240;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile              on;
    keepalive_timeout     300;
    proxy_read_timeout    600;
    client_max_body_size  32M;

    lua_shared_dict prometheus_metrics 10M;
    lua_package_path "/nginx-lua-prometheus-0.20221218/prometheus.lua";

    init_worker_by_lua_block {
        prometheus = require("prometheus").init("prometheus_metrics")

        metric_requests = prometheus:counter(
            "nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
        metric_latency = prometheus:histogram(
            "nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
        metric_connections = prometheus:gauge(
            "nginx_http_connections", "Number of HTTP connections", {"state"})
    }

    log_by_lua_block {
        metric_requests:inc(1, {ngx.var.server_name, ngx.var.status})
        metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
    }

    server {
        listen         80;
        location ^~ /.well-known/acme-challenge/ {
            default_type "text/plain";
            root /etc/nginx/private/certbot;
        }
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen       443 ssl;

        gzip                on;
        gzip_disable        "msie6";
        gzip_vary           on;
        gzip_proxied        any;
        gzip_comp_level     6;
        gzip_buffers        16 8k;
        gzip_http_version   1.1;

        gzip_types                  text/plain text/css text/csv text/xml text/javascript
                                    application/json application/x-javascript application/xml
                                    application/vnd.ms-fontobject application/octet-stream
                                    application/x-font-woff multipart/related image/svg+xml;

        ssl_certificate             /etc/nginx/private/cert.pem;
        ssl_certificate_key         /etc/nginx/private/key.pem;
        ssl_prefer_server_ciphers   on;
        ssl_session_timeout         30m;
        ssl_session_cache           shared:SSL:5m;
        ssl_protocols               TLSv1.2 TLSv1.1 TLSv1;
        ssl_ciphers                 ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:DHE-RSA-CAMELLIA256-SHA:DHE-RSA-AES128-SHA:DES-CBC3-SHA:!EXP:!ADH:!aNULL;

        # Prevent "clickjacking" attacks:
        #   This disallows external sites from embedding any of our pages in
        #   an <iframe>. Since medic-reporter currently uses an <iframe>, we've
        #   set the value to SAMEORIGIN instead of DENY. If we ever stop using
        #   <iframes>s, we should probably switch this back to DENY.

        add_header X-Frame-Options  SAMEORIGIN;

        location /metrics {
            content_by_lua_block {
                metric_connections:set(ngx.var.connections_reading, {"reading"})
                metric_connections:set(ngx.var.connections_waiting, {"waiting"})
                metric_connections:set(ngx.var.connections_writing, {"writing"})
                prometheus:collect()
            }
        }

        include /etc/nginx/conf.d/server.conf;
    }
}

# vim: set nowrap tw=0:
